{"version":3,"sources":["Employee/Employee.js","Dropdown/Dropdown.js","Sidebar/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Employee","props","barWidth","className","name","children","green","ProgressBar","animated","now","label","DropDown","state","listOpen","headerTitle","title","location","id","selected","key","this","setState","prevState","data","Array","from","list","onClick","toggleList","size","map","item","Component","Sidebar","class","App","error","items","employee_name","employee_salary","employee_age","profie_image","value","valuesInserted","maxValue","creating","idModal","firstValue","catchInfo","event","parseInt","target","console","log","startCreateEventHandler","a","stopCreateEventHandlerCancel","stopCreateEventHandlerConfirm","slice","findIdBarWidth","find","undefined","findId","fetch","then","res","json","result","message","type","onChange","salary","age","profileImage","thousandSeparator","prefix","style","border","background","color","width","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.eb01c1bb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Employee.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nconst Employee = (props) => {\r\n    let aux = props.barWidth;  \r\n    return(\r\n        <div>\r\n            <div className='employeeWrapper'>\r\n                <h3 className='employeeName'>{props.name}</h3>\r\n                <p className='employeeInfo'>{props.children}</p>\r\n                <p className='additionalInfo'>Ao clicar no botão acima, uma caixa de diálogo se abrirá perguntando quantos reais você deseja adicionar à barra de progresso. A barra deve começar em R$0 e vai até R$200. Ao adicionar um valor, o retângulo na parte direita superior ficará verde, enquanto não o fizer, ficará vermelho.</p>\r\n                <p className='maxValue'>Max: R$200</p>\r\n                {props.green ? \r\n                ( <ProgressBar animated now={props.barWidth/2} label={`R$${props.barWidth}`} /> ) \r\n                : ( <ProgressBar animated now={0} /> )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee","import React, {Component} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\nclass DropDown extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title,\r\n      location: [\r\n        {\r\n            id: 0,\r\n            title: 'New York',\r\n            selected: false,\r\n            key: 'location'\r\n        },\r\n        {\r\n          id: 1,\r\n          title: 'Dublin',\r\n          selected: false,\r\n          key: 'location'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'California',\r\n          selected: false,\r\n          key: 'location'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: 'Istanbul',\r\n          selected: false,\r\n          key: 'location'\r\n        },\r\n        {\r\n          id: 4,\r\n          title: 'Izmir',\r\n          selected: false,\r\n          key: 'location'\r\n        },\r\n        {\r\n          id: 5,\r\n          title: 'Oslo',\r\n          selected: false,\r\n          key: 'location'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  handleClickOutside(){\r\n    this.setState({\r\n      listOpen: false\r\n    })\r\n  }\r\n  toggleList(){\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen\r\n    }))\r\n  }\r\n  render(){\r\n    const data = Array.from(this.props.list);\r\n    const{listOpen, headerTitle} = this.state\r\n    return(\r\n      <div className=\"dd-wrapper\">\r\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n          <div className=\"dd-header-title\">{headerTitle}</div>\r\n          {listOpen\r\n            ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\r\n            : <FontAwesome name=\"angle-down\" size=\"2x\"/>\r\n          }\r\n        </div>\r\n        {listOpen && <ul  className=\"list-unstyled-components\">\r\n         {data.map( item => (\r\n           <li  className=\"dd-list-item\" key={item.id} >{item.title}</li>\r\n          ))}\r\n        </ul>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropDown","import React,{Component} from 'react'\r\nimport './Sidebar.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropDown from '../Dropdown/Dropdown'\r\n\r\nclass Sidebar extends Component{\r\n    state = {\r\n        list: [{id: 1,  title: 'First Option'}, {id: 2,  title: 'Second Option'}, {id: 3,  title: 'Third Option'}],\r\n    }\r\n    render(){\r\n        return (\r\n            <div class=\"wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <div class=\"sidebar-header\">\r\n                    <h4>Processo seletivo</h4>\r\n                    <h6>Front-End</h6>\r\n                </div>\r\n        \r\n                <ul class=\"list-unstyled components\">\r\n                    <li>\r\n                        <a>\r\n                      <DropDown title=\"Home\"\r\n                        list= {this.state.list}/>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a >About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a>\r\n                        <DropDown title=\"Our Jobs\"\r\n                        list= {this.state.list}/></a>\r\n                        \r\n                    </li>\r\n                    <li>\r\n                        <a >Portfolio</a>\r\n                    </li>\r\n                    <li>\r\n                        <a >Contact</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react';\nimport './App.css';\nimport Employee from './Employee/Employee'\nimport Sidebar from './Sidebar/Sidebar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NumberFormat from 'react-number-format';\n\nclass App extends Component{\n    state = {\n      error: null,\n      items: [{\n        id: '',\n        employee_name: '',\n        employee_salary: '',\n        employee_age: '',\n        profie_image: '',\n        value: '',\n      }],\n      valuesInserted: [\n        {id: 0, value: 0, green: false},\n        {id: 1, value: 0, green: false},\n        {id: 2, value: 0, green: false},\n        {id: 3, value: 0, green: false},\n        {id: 4, value: 0, green: false},\n        {id: 5, value: 0, green: false},\n        {id: 6, value: 0, green: false},\n        {id: 7, value: 0, green: false},\n        {id: 8, value: 0, green: false},\n        {id: 9, value: 0, green: false},\n        {id: 10, value: 0, green: false},\n        {id: 11, value: 0, green: false},\n        {id: 12, value: 0, green: false},\n        {id: 13, value: 0, green: false},\n        {id: 14, value: 0, green: false},\n        {id: 15, value: 0, green: false},\n        {id: 16, value: 0, green: false},\n        {id: 17, value: 0, green: false},\n        {id: 18, value: 0, green: false},\n        {id: 19, value: 0, green: false},\n        {id: 20, value: 0, green: false},\n        {id: 21, value: 0, green: false},\n        {id: 22, value: 0, green: false},\n        {id: 23, value: 0, green: false},\n      ],\n      maxValue: 200,\n      creating: false,\n      idModal: 0,\n      firstValue: '',\n      //array para armazenar os dados que serão obtidos pela api\n    };\n\n  componentDidMount() {//consumindo a API\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n      .then(res => res.json())\n      .then(\n        (result) => {//passando os dados da api para o array no state\n          this.setState({\n            items: result.data\n          });\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n  }\n\n  catchInfo = (event) => {\n    let a = parseInt(event.target.value, 10);\n    let b = parseInt(this.state.valuesInserted[this.state.idModal].value, 10);\n    let value = a+b;\n    if(value > 200) value = 200;\n    this.setState({firstValue: value})\n    console.log('firstvalue:' , this.state.firstValue)\n  }\n\n  startCreateEventHandler = (id) =>{\n    this.setState({creating : true});\n    const a = parseInt(id, 10);\n    this.setState({idModal: (a)});\n  }\n\n  stopCreateEventHandlerCancel = (event, id) =>{\n    this.setState({creating : false});\n  }\n\n  stopCreateEventHandlerConfirm = (event, id) =>{\n    let a = this.state.valuesInserted.slice(); //creates the clone of the state\n    a[this.state.idModal].value = this.state.firstValue;\n    if(a[this.state.idModal].value > 0) a[this.state.idModal].green = true;\n    this.setState({valuesInserted: a});\n    this.setState({creating : false});\n  }\n\n  findIdBarWidth = (props) => {\n    let id = parseInt(props.id);\n    let barWidth = this.state.valuesInserted.find(\n      value => value.id === id-1\n    );\n    if(barWidth === undefined) return false;\n    return barWidth.value;\n  }\n\n  findId = (props) => {\n    let id = parseInt(props.id);\n    let green = this.state.valuesInserted.find(\n      value => value.id === id-1\n    );\n    if(green === undefined) return false;\n    return green.green;\n  }\n\n  render() {\n    const { error, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    }else {\n      return (\n        <div className='geral'>\n         <Sidebar/>\n         {this.state.creating && <div className=\"divModal\"><header className='modalHeader'><h1>Inserir valor em reais para {this.state.items[this.state.idModal].employee_name}</h1></header>\n                <section className='modalContent'>\n                    <input type=\"text\"  onChange={(event) => this.catchInfo(event)}></input>\n                </section>\n                <section className='modalActions'> \n                    <button className='btnModal' onClick={() => this.stopCreateEventHandlerCancel()}>Cancelar</button>\n                    <button className='btnModal' onClick={() => this.stopCreateEventHandlerConfirm(this.state.idModal)}>Confirmar</button>\n                </section>\n              </div>}\n         <div className='container' >\n          {console.log('estado criando: ', this.state.creating)}\n          \n            <div className='row mt-5'>  \n              <div className='col-md-12'>\n              <h2 className='titulo'>Pessoas cadastradas e seus valores</h2>\n                <div className='employees'>\n                  {items.map(item => (\n                    <div className='row mt-5'>\n                      <div className='row mt-5'>\n                        <div className='col-12'>\n                          <Employee id={item.id}\n                            name={item.employee_name}\n                            salary={item.employee_salary}\n                            age={item.employee_age}\n                            profileImage={item.profie_image}\n                            barWidth = {this.findIdBarWidth(item)} \n                            idModal = {this.state.idModal}\n                            green = {this.findId(item)}>\n                              \n                              <div class=\"row\">\n                                  <div className='col-4 offset-8'>\n                                    {this.findId(item) ? \n                                      ( <div class='employeeHeaderWithValue'></div> ) \n                                      : ( <div class='employeeHeaderWithoutValue'></div> )\n                                    }\n                                  </div>\n                              </div>\n                              <h6>Id:{item.id}  Salário: <NumberFormat thousandSeparator={true} prefix={'R$'} value={item.employee_salary} style={{border:'none', background:'#91a2eb', color:'#FFFFFF', width:'9%'}}/>    Idade: {item.employee_age}</h6>                            \n                              \n                              <div class=\"row\">\n                                  <div className='col offset-9'>\n                              <button className='createEventButton' onClick={() => this.startCreateEventHandler(item.id-1)}><i className='icon+'> + </i>Adicionar um valor em reais</button>\n                              </div>\n                    </div>\n                          </Employee>\n                        </div>  \n                      </div>\n                    </div>\n                  ))}\n                </div>  \n              </div>\n            </div>\n          </div>\n        </div>  \n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}